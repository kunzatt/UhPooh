# Web ContextRootPath and PortNumber Settings
server.servlet.context-path=/uhpooh
server.port=8080

# JSP Path (ViewResolver)
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# DataBase Settings
spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/uhpooh?serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8
spring.datasource.hikari.username=root
spring.datasource.hikari.password=Rlacpftl!2
spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver

# MyBatis Setting
mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.type-aliases-package=com.ssafy.edu.*.model.dto

# MyBatis 로그 추가 (SQL 확인용)
logging.level.com.ssafy.edu.user.model.dao=TRACE

# 파일 업로드 기본 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.file-size-threshold=2KB

#log level Setting
logging.level.root=info
logging.level.com.ssafy.edu=debug
logging.level.org.springframework.security=DEBUG
logging.level.org.mybatis=DEBUG
logging.level.org.springframework.web=DEBUG



# swagger setting
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

# Image URL path (웹에서 접근 가능한 경로)
file.url.profile=/uhpooh/images/profiles
file.url.review=/uhpooh/images/reviews

# 실제 파일 저장 경로 (절대 경로)
file.path=src/main/resources/images

# cors 설정
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# oAuth Naver Login

# provider
# ??? ??? ?? uri, ???? ??? ??? ???? ?????? ? ? ??? ??
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#??? ??? ?? ?? URL, ?? ??? ??? ???? ??? ? ? ??? ??? ???.
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# ??? ??? ??? ???? ?? URL
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# ??? ?? ???? ??? ???? ??? ??? ??. ???? ?? 'id'? ??
spring.security.oauth2.client.provider.naver.user-name-attribute=id

# registration
spring.security.oauth2.client.registration.naver.client-id=Nb3YTTrO0fgCoKdo05WQ
spring.security.oauth2.client.registration.naver.client-secret=hRsm0ZZhP9
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:5173/api/oauth2/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.scope=nickname,email, name