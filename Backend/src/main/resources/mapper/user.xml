<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.edu.user.model.dao.UserDao">


    <!-- 전체 회원 목록 조회 -->
    <select id="userList" resultType="User">
        SELECT *
        FROM users
    </select>

    <!-- 로그인 -->
    <select id="userLogin" parameterType="User" resultType="User">
        SELECT userEmail, password, isAdmin
        FROM users
        WHERE userEmail = #{userEmail} AND password = #{password}
    </select>

    <!-- 회원가입 -->
    <insert id="userSignup" parameterType="User">
        INSERT INTO users (userEmail, password, userName)
        VALUES (#{userEmail}, #{password}, #{userName})
    </insert>

    <!-- 회원정보 수정 -->
    <update id="userUpdate" parameterType="User">
        UPDATE users
        SET userName = #{userName},
        pImage = #{pImage},
        updTime = now()
        WHERE userId = #{userId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="userDelete" parameterType="int">
        DELETE FROM users
        WHERE userId = #{userId}
    </delete>

    <!-- 회원 상세 정보 -->
    <select id="userDetail" parameterType="int" resultType="User">
        SELECT userEmail, userName, isAdmin
        FROM users
        WHERE userId = #{userId}
    </select>

    <!-- 이메일 중복 체크 -->
    <select id="userIdCheck" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE userEmail = #{userEmail}
    </select>

    <!-- 닉네임 중복 체크 -->
    <select id="userNameCheck" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE userName = #{userName}
    </select>

    <!-- 비밀번호 수정 -->
    <update id="updatePassword" parameterType="User">
        UPDATE users
        SET password = #{password},
        updTime = now()
        WHERE userId = #{userId}
    </update>

    <!-- 로그인 상태 변경 -->
    <update id="updateLoginStatus" parameterType="User">
        UPDATE users
        SET isLogin = #{isLogin},
        updTime = now()
        WHERE userId = #{userId}
    </update>




</mapper>