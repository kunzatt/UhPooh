<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.edu.review.model.dao.ReviewDao">

    <!-- 전체 리뷰 목록 조회 -->
    <select id="reviewList" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName as userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
    </select>

    <!-- 리뷰 작성 -->
    <insert id="addReview" parameterType="Review">
        INSERT INTO reviews (
        userId,
        placeId,
        title,
        content,
        regTime
        ) VALUES (
        #{userId},
        #{placeId},
        #{title},
        #{content},
        NOW()
        )
    </insert>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="Review">
        UPDATE reviews
        SET
        title = #{title},
        content = #{content},
        updTime = NOW()
        WHERE reviewId = #{reviewId}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM reviews
        WHERE reviewId = #{reviewId}
    </delete>

    <!-- 리뷰 상세 조회 -->
    <select id="reviewDetail" parameterType="int" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName as userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.reviewId = #{reviewId}
    </select>

    <!-- 제목으로 리뷰 검색 -->
    <select id="searchByTitle" parameterType="map" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY r.regTime DESC
        LIMIT #{start}, #{size}
    </select>

    <!-- 제목 검색 결과 총 개수 -->
    <select id="getTitleSearchCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        WHERE r.title LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 작성자로 리뷰 검색 -->
    <select id="searchByWriter" parameterType="map" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE u.userName LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY r.regTime DESC
        LIMIT #{start}, #{size}
    </select>

    <!-- 작성자 검색 결과 총 개수 -->
    <select id="getWriterSearchCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE u.userName LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 장소별 리뷰 목록 조회 -->
    <select id="getReviewsByPlace" parameterType="map" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName as userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.placeId = #{placeId}
        ORDER BY r.regTime DESC
        LIMIT #{start}, #{size}
    </select>

    <!-- 장소별 리뷰 총 개수 -->
    <select id="getPlaceReviewCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM reviews
        WHERE placeId = #{placeId}
    </select>

    <!-- 장소별 작성자 검색 -->
    <select id="searchByWriterInPlace" parameterType="map" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName as userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.placeId = #{placeId}
        AND u.userName LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY r.regTime DESC
        LIMIT #{start}, #{size}
    </select>

    <!-- 장소별 작성자 검색 총 개수 -->
    <select id="getWriterSearchCountInPlace" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.placeId = #{placeId}
        AND u.userName LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 장소별 제목 검색 -->
    <select id="searchByTitleInPlace" parameterType="map" resultType="Review">
        SELECT
        r.reviewId,
        r.userId,
        r.placeId,
        r.title,
        r.content,
        r.regTime,
        r.updTime,
        u.userName as userName
        FROM reviews r
        JOIN users u ON r.userId = u.userId
        WHERE r.placeId = #{placeId}
        AND r.title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY r.regTime DESC
        LIMIT #{start}, #{size}
    </select>

    <!-- 장소별 제목 검색 총 개수 -->
    <select id="getTitleSearchCountInPlace" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        WHERE r.placeId = #{placeId}
        AND r.title LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 리뷰 이미지 추가 -->
    <insert id="addReviewImage" parameterType="ReviewImage">
        INSERT INTO reviewImages (
        reviewId,
        imageUrl
        ) VALUES (
        #{reviewId},
        #{imageUrl}
        )
    </insert>

    <!-- 리뷰의 모든 이미지 조회 -->
    <select id="getReviewImages" parameterType="int" resultType="ReviewImage">
        SELECT
        imageId,
        reviewId,
        imageUrl
        FROM reviewImages
        WHERE reviewId = #{reviewId}
    </select>

    <!-- 특정 이미지 삭제 -->
    <delete id="deleteReviewImage" parameterType="int">
        DELETE FROM reviewImages
        WHERE imageId = #{imageId}
    </delete>

    <!-- 특정 이미지 정보 조회 -->
    <select id="getReviewImageById" parameterType="int" resultType="ReviewImage">
        SELECT
        imageId,
        reviewId,
        imageUrl
        FROM reviewImages
        WHERE imageId = #{imageId}
    </select>

</mapper>